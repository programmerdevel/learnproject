<?php
// $Id$
/**
 * Implementation of hook_menu().
 */

function searchforms_block_info() {
  $block = array();
  $block[0]['info'] = t('Search by University Name');
  $block[1]['info'] = t('Search by Location');
  return $block;
}

function searchforms_block_view($delta = '') {
  switch ($delta) {
    case 0:
      return array(
          'subject' => 'Search by University Name',
          'content' => drupal_get_form('search_by_name')
      );
      break;
    case 1:
      return array(
          'subject' => 'Search by Location',
          'content' => drupal_get_form('search_by_location')
      );
      break;
  }
}

function searchforms_menu() {
  $items['searchbyname'] = array(
      'title' => t('Search By Name'),
      'description' => 'Search By University Name',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('search_by_name'),
      'access callback' => TRUE
  );
  
  $items['searchbylocation'] = array(
      'title' => t('Search By Location'),
      'description' => 'Search By Location',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('search_by_location'),
      'access callback' => TRUE
  );
  
  $items['input_university_name/autocomplete'] = array(
      'page callback' => 'input_university_name_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
  );
  
  $items['input_state/autocomplete'] = array(
      'page callback' => 'input_state_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
  );
  
  $items['input_city/autocomplete'] = array(
      'page callback' => 'input_city_autocomplete',
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK
  );

  return $items;
}

function search_by_name($form, &$form_submit) {
  $form['university_name'] = array(
    '#title' => t('University Name'),
    '#type' => 'textfield',
    '#description' => t('Please enter university name.'),
    '#autocomplete_path' => 'input_university_name/autocomplete', 
    '#required' => TRUE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit')
  );
  return $form;
}

function search_by_name_submit($form, &$form_state) {
  $university_name = $form_state['values']['university_name'];
  $path = get_node_url_from_title($university_name);
  drupal_goto($path);
}

function search_by_location_submit($form, &$form_state) {
  global $base_url;
  $state = str_replace(' ', '-', (strtolower($form_state['values']['state'])));
  $city = str_replace(' ', '-', (strtolower($form_state['values']['city'])));
  
  $path = 'universities/'.$state.'/city/'.$city;
  
  if(url_exist($path)){
    drupal_goto($base_url.'/'.$path);
  }
  else {
    $path = 'universities/state/'.$state;
    if(url_exist($path)){
      $url = $base_url.'/'.$path;
      drupal_set_message(t("No University found for State :: @state, City :: @city. But We found <a href='@url'>Universities in @state</a>", array('@state' => $form_state['values']['state'], '@city' => $form_state['values']['city'], '@url' => $url, '@state' => $form_state['values']['state'])));
    }
    else {
      $url = $base_url.'/universities/state';
      drupal_set_message(t("No University found for State :: @state, City :: @city. Please Browse <a href='@url'>Universities by State</a>", array('@state' => $form_state['values']['state'], '@city' => $form_state['values']['city'], '@url' => $url)));
    }
  }
}

function url_exist($path) {
  $result = db_query("SELECT u.alias FROM {url_alias} u WHERE u.alias = :path", array(":path"=> $path));  
  $count = $result->rowCount();
  
  if($count > 0){
    return TRUE;
  }
  
  return FALSE;
}

function get_node_url_from_title($title) {
  global $base_url;
  $result = db_query("SELECT n.nid FROM {node} n WHERE n.title = :title AND n.type = :type", array(":title"=> $title, ":type"=> 'university'));  
  $nid = $result->fetchField();
  
  $source = 'node/'.$nid;
  unset($result);
  
  $result = db_query("SELECT alias FROM {url_alias} u WHERE u.source = :source", array(":source"=> $source));  
  $url = $base_url.'/'.$result->fetchField();
  
  return $url;
}

function search_by_location($form, &$form_submit) {
  $form['state'] = array(
    '#title' => t('State'),
    '#type' => 'textfield',
    '#description' => t('Please Select State.'),
    '#autocomplete_path' => 'input_state/autocomplete', 
    '#required' => TRUE, 
  );
  
  $form['city'] = array(
    '#title' => t('City'),
    '#type' => 'textfield',
    '#description' => t('Please Enter City.'),
    '#autocomplete_path' => 'input_city/autocomplete', 
    '#required' => TRUE,  
  );
  
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit')
  );
  return $form;
}


function input_state_autocomplete($string = '') {
  $states = array();
 
  $query = db_select('field_data_field_state', 'f');
 
  $return = $query
    ->fields('f', array('field_state_value'))
    ->condition('f.field_state_value', '%' . db_like($string) . '%', 'LIKE')      
    ->range(0,5)
    ->execute();
 
  foreach ($return as $row) {
    $state = ucwords(str_replace('-', ' ', $row->field_state_value));
    $states[$state] = $state;
  }
  
  drupal_json_output($states);
}

function input_university_name_autocomplete($string = '') {
  $matches = array();
 
  $query = db_select('node', 'n');
 
  $return = $query
    ->fields('n', array('title'))
    ->condition('n.title', '%' . db_like($string) . '%', 'LIKE')
    ->range(0, 5)
    ->execute();
 
  foreach ($return as $row) {
    $matches[$row->title] = check_plain($row->title);
  }
 
  drupal_json_output($matches);
}

function input_city_autocomplete($string = '') {
  $matches = array();
 
  $query = db_select('location', 'l');
 
  $return = $query
    ->fields('l', array('city'))
    ->condition('l.city', '%' . db_like($string) . '%', 'LIKE')
    ->range(0, 5)
    ->execute();
 
  foreach ($return as $row) {
    $matches[$row->city] = check_plain($row->city);
  }
 
  drupal_json_output($matches);
}
